{"version":3,"sources":["Book.js","BooksAPI.js","SearchPage.js","HomePage.js","App.js","index.js"],"names":["Book","_this","this","shownThumbnail","props","book","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","concat","value","currentShelf","onChange","event","changeShelf","target","disabled","title","authors","React","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","searchedBooks","updateQuery","setState","updateSearchedBooks","BooksAPI","error","_this2","Link","to","type","placeholder","map","key","src_Book","HomePage","filter","BooksApp","console","log","response","_this3","Route","exact","path","render","src_HomePage","src_SearchPage","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.863c3b69.chunk.js","sourcesContent":["import React from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nclass Book extends React.Component {\r\n  render() {\r\n    let shownThumbnail = this.props.book.imageLinks ?\r\n      this.props.book.imageLinks.thumbnail : '';\r\n    return (\r\n      <div className = \"book\">\r\n      <div className = \"book-top\">\r\n      <div className = \"book-cover\" style = {{\r\n          width: 128,\r\n          height: 193,\r\n          backgroundImage: `url(\"${shownThumbnail}\"`}}>\r\n      </div>\r\n      <div className = \"book-shelf-changer\">\r\n      <select value = {\r\n        this.props.currentShelf\r\n      }\r\n      onChange = {\r\n        (event) => this.props.changeShelf(this.props.book, event.target.value)\r\n      }>\r\n      <option value = \"move\" disabled>Move to... </option>\r\n      <option value = \"currentlyReading\">Currently Reading</option>\r\n      <option value = \"wantToRead\">Want to Read</option>\r\n      <option value = \"read\">Read</option>\r\n      <option value = \"none\">None</option>\r\n      </select>\r\n      </div>\r\n      </div>\r\n      <div className = \"book-title\"> {\r\n        this.props.book.title\r\n      }\r\n      </div>\r\n      <div className = \"book-authors\"> {\r\n        this.props.book.authors\r\n      }\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Book\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import PropTypes from 'prop-types';\r\n//import escapRegExp from 'escape-string-regexp';\r\nimport Book from './Book';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass SearchPage extends React.Component {\r\n  state = {\r\n    books: [],\r\n    searchedBooks: [],\r\n    query: ''\r\n  }\r\n\r\nupdateQuery = (query) => {\r\n\t\tthis.setState({\r\n          query: query\r\n        })\r\n  \t\tthis.updateSearchedBooks(query);\r\n\t}\r\n\r\n updateSearchedBooks = (query) => {\r\n   if (query) {\r\n \tBooksAPI.search(query).then((searchedBooks) => {\r\n      if (searchedBooks.error) {\r\n        this.setState({ searchedBooks: [] });\r\n      \t} else {\r\n\t\t  this.setState({ searchedBooks: searchedBooks });\r\n        }\r\n      }\r\n    )\r\n   } else {\r\n   \t\tthis.setState({ searchedBooks: [] });\r\n   }\r\n }\r\n  render() {\r\n    //const queryBooks = this.props.state;\r\n    return (\r\n      <div className=\"search-books\">\r\n     \t <div className=\"search-books-bar\">\r\n      \t\t<Link\r\n       \t\t\tto=\"/\"\r\n       \t\t\tclassName=\"close-search\">Close</Link>\r\n\t\t\t<div className=\"search-books-input-wrapper\">\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search by title or author\"\r\n\t\t\t\tvalue={this.state.query}\r\n\t\t\t\tonChange={(event) => this.updateQuery(event.target.value)}\r\n\t\t\t\t/>\r\n            </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n\t\t\t{\r\n           \t this.state.searchedBooks.map(searchedBooks => {\r\n              \tlet shelf = 'none';\r\n              \tthis.props.books.map(book => (\r\n              \t  book.id === searchedBooks.id ?\r\n                  shelf = book.shelf : ''\r\n              \t));\r\n            \treturn(\r\n              \t<li key={searchedBooks.id}>\r\n\t\t\t\t <Book\r\n\t\t\t\t\tbook={searchedBooks}\r\n\t\t\t\t\tchangeShelf={this.props.changeShelf}\r\n\t\t\t\t\tcurrentShelf={shelf}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</li>\r\n\t\t\t\t)\r\n\t\t\t})\r\n           }\r\n\t\t\t</ol>\r\n        </div>\r\n    </div>\r\n\t);\r\n\t}\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className = \"list-books\">\r\n      <div className = \"list-books-title\">\r\n      <h1>MyReads</h1>\r\n      </div>\r\n      <div className = \"list-books-content\">\r\n      <div>\r\n      <div className = \"bookshelf\">\r\n      <h2 className = \"bookshelf-title\">Currently Reading</h2>\r\n      <div className = \"bookshelf-books\">\r\n      <ol className = \"books-grid\">\r\n\r\n      {\r\n        this.props.books.filter(book => book.shelf === 'currentlyReading')\r\n        .map(book => ( <li key = { book.id }>\r\n          <Book\r\n             book = {book}\r\n          changeShelf = {this.props.changeShelf}\r\n          currentShelf = \"currentlyReading\"\r\n          />\r\n          </li>\r\n        ))\r\n      }\r\n      </ol>\r\n      </div>\r\n      </div>\r\n      <div className = \"bookshelf\">\r\n      <h2 className = \"bookshelf-title\">Want to Read</h2>\r\n      <div className = \"bookshelf-books\">\r\n      <ol className = \"books-grid\">\r\n\r\n      {\r\n        this.props.books.filter(book => book.shelf === 'wantToRead')\r\n          .map(book => (\r\n          <li key = {book.id}>\r\n          <Book\r\n              book = {book}\r\n          changeShelf = {\r\n            this.props.changeShelf\r\n          }\r\n          currentShelf = \"wantToRead\"\r\n          />\r\n          </li>\r\n        ))\r\n      }\r\n      </ol>\r\n    </div>\r\n    </div>\r\n    <div className = \"bookshelf\">\r\n    <h2 className = \"bookshelf-title\">Read</h2>\r\n    <div className = \"bookshelf-books\">\r\n    <ol className = \"books-grid\"> {\r\n        this.props.books.filter(book => book.shelf === 'read')\r\n        .map(book => (\r\n          <li key = {book.id}>\r\n          <Book\r\n              book = {book}\r\n          changeShelf = {\r\n            this.props.changeShelf\r\n          }\r\n          currentShelf = \"read\"\r\n          />\r\n          </li>\r\n        ))\r\n      }\r\n      </ol>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div className = \"open-search\" title=\"Search Books\">\r\n      <Link to = \"/searchpage\">Add a book</Link>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SearchPage from './SearchPage';\r\nimport HomePage from './HomePage';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: []\r\n    //showSearchPage: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({\r\n        books: books\r\n      })\r\n    })\r\n  }\r\n\r\n  changeShelf = (book, shelf) => {\r\n    console.log(\"changing shelf: \", shelf);\r\n     BooksAPI.update({id: book.id}, shelf).then(response => {\r\n       book.shelf = shelf;\r\n      BooksAPI.getAll().then((books) => {\r\n        this.setState({ books })\r\n      })\r\n     });\r\n   }\r\n  // changeShelf = (book, shelf) => {\r\n  //    BooksAPI.update(book, shelf)\r\n  //      .then(res => {\r\n  //    \tbook.shelf = shelf;\r\n  //      this.setState(state => ({\r\n  //      \tbooks: state.books.filter(b => b.id !== book.id.concat({book}))\r\n  //      }))\r\n  //    })\r\n  //   }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"app\">\r\n      <Route exact path=\"/\" render={() => (\r\n          <HomePage\r\n            books={this.state.books}\r\n            changeShelf={this.changeShelf}\r\n          />\r\n        )}/>\r\n\r\n      <Route exact path=\"/searchpage\" render={() => (\r\n          <SearchPage\r\n            books={this.state.books}\r\n            changeShelf={this.changeShelf}\r\n          />\r\n        )}/>\r\n    </div>\r\n  )}\r\n};\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}